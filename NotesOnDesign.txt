
Actor
	Player
	Enemy

Manage States
Take input vs. Adhere to AI
	PlayerInputManager
	EnemyAIManager
		-Shared AI components?

GameController
	-GameStates

StateManager (Player,AI's)
-Shared States vs. unique states?
	PlayerStates
	EnemyStates
	
Actors are GameObjects with states that can perform actions	
WITHIN STATES there are ACTIONS
	An action is a "thing" performed by an actor
	Actions are usually performed immediately if the state allows it

Action (Just execute) does not include movement 
	-Move (might need to be separate)

-Jump
-Shoot
-death?


Ok whats next
Bullets 
	-onCollide(collider)
Actor
	-takeDamage()

EnemySpawner


-----------------------

Player states
MOVEMENT STATES
Standing (can shoot)
	-Run (can shoot)
	-Shoot
	-Hurt
Crouching (can shoot)
	-Shoot
	-Hurt (animation same as standing)
Jumping (can shoot)
Rolling
Death
	-Play death animation
	-Respawn in new location OR reload level

ACTIONS
Gun shoot (with aim)
Grenade throw
Melee


-------------------

Taking Damage (cuphead style)
1. Fire off PlayerDeathEvent
2. Player will enter death state via animation state change
3. In player death behaviour controller
	-Before: Change game state to player death state
	-During: play death animation
	-Ater: player lingers in death state, menu comes up

PlayerDeathState
Start: update same list of objects as gameplay update
Update: UpdateStates
End: Just regular transition

off y -.08
size x 0.2
size y 0.13

---------------------

Editable Gun values
-Bullet speed, fire rate, bullet type, damage
-Shoot Origin should be an empty gameobject relative to player
	-animations change it's position
	-Also update shoot direction

	
angled shooting
30 degrees = .33

-----------------------
Reusable enemy states (might be behaviour scripts now)
Wait
Attack
Patrol






